version: "3.9"

services:
  app:
    build:
      context: .
    command: >
          sh -c " poetry run python manage.py wait_for_db &&
                  poetry run python manage.py migrate &&
                  poetry run python manage.py loaddata src/apps/agriculture/fixtures/PlantedCropsModel.json
                  poetry run python manage.py loaddata src/apps/region/fixtures/CountryModel.json
                  poetry run python manage.py loaddata src/apps/region/fixtures/StateModel.json
                  poetry run python manage.py loaddata src/apps/region/fixtures/CityModel.json
                  poetry run uwsgi --http :8000 --workers 4 --master --enable-threads --module src.config.wsgi --buffer-size 16384
                  
                "
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/app/src/staticfiles
    expose:
      - 8000
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/src/staticfiles
      - media_volume:/app/srcs/mediafiles
    ports:
      - 80:80
    depends_on:
      - app

volumes:
  postgres_data:
  static_volume:
  media_volume: